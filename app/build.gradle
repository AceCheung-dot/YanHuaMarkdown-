apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId "bob.eve.walle"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        resConfigs "zh"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                // EventBus Apt 索引类生成位置
                arguments = [eventBusIndex: applicationId + '.MyEventBusIndex']
            }
        }
    }


    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }


    /*
  splits {
     enable：boolean型，表示打开或关闭APK分割功能
     reset()：复位，若要使用include功能，则使用前需调用reset()
     include：创建白名单，仅构建出白名单中指定的格式
     exclude：黑名单，不会构建出黑名单中指定的格式>* compatibleScreens(仅限density)：未知
     universalApk(仅限ABI)：默认为true，即除了指定的格式外，还会构建出一个通用的APK
     */
    /*
   android{
    splits {
      density {
        enable true exclude 'ldpi','mdpi' compatibleScreens 'normal', 'large', 'xlarge'
      }
    }
   }
   */
    /*
   android{
    splits {
     abi {
      enable true reset() include 'x86', 'armeabi-v7a', 'mips' universalApk false
      }
    }
   }
}
*/
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8


    }
    flavorDimensions "default" // 这个名字貌似随便取，也可以有多个，总之一定要有
    // 友盟多渠道打包
    productFlavors {
        kuan {}     // 酷安
        tencent {}  // 应用宝
        baidu {}    // 百度
        xiaomi {}   // 小米
        huawei {}   // 华为
        google {}   // 谷歌

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Umeng"]
            flavor.manifestPlaceholders = [UMENG_APP_KEY: "5d953a873fc1957a8b00032d"]
        }
    }

    // JNI 目录
    sourceSets {
        main {
            //  jniLibs.srcDirs = ['libs']
        }
    }

    // 执行配置
    applicationVariants.all { variant ->

        // Apk 输出配置
        variant.outputs.all { output ->
            def appName = "AndroidProject"
            if (variant.buildType.name == 'debug') {
                outputFileName = appName + '_v' + versionName + '_' + variant.buildType.name + '.apk'
            } else {
                outputFileName = appName + '_v' + versionName + '_' + new Date().format("yyyyMMdd") + '_' + variant.productFlavors[0].name + '_' + variant.buildType.name + '.apk'
            }
        }

        // AndroidManifest 输出配置
        variant.outputs[0].processManifest.doLast {
            def manifestFile = "C:\\Users\\AceZhang\\Desktop\\Eve-master\\app\\build\\intermediates\\merged_manifests\\baiduDebug\\AndroidManifest.xml"
            def updatedContent = new File(manifestFile).getText('UTF-8')
                    .replaceAll("UMENG_CHANNEL_VALUE", "Umeng")
                    .replaceAll("UMENG_APPKEY_VALUE", "5d953a873fc1957a8b00032d") // 友盟 AppKey
                    .replaceAll("QQ_APPID_VALUE", "1105602574") // QQ AppId
                    .replaceAll("QQ_APPKEY_VALUE", "c7394704798a158208a74ab60104f0ba") // QQ Key
                    .replaceAll("WX_APPID_VALUE", "wxdc1e388c3822c80b") // 微信 AppId
                    .replaceAll("WX_APPKEY_VALUE", "3baf1193c85774b3fd9d18447d76cab0") // 微信 Key
                    .replaceAll("SN_APPID_VALUE", "3921700954") // 新浪 AppId
                    .replaceAll("SN_APPKEY_VALUE", "04b48b094faeb16683c32669824ebdad") // 新浪 Key
            new File(manifestFile).write(updatedContent, 'UTF-8')
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':evemvp')
    implementation project(':everepository')
    implementation project(':evelib')
    implementation project(':calendarview')
    implementation project(':rule-view')
    api rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    // annotationProcessor来代替android-apt
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    implementation 'androidx.appcompat:appcompat:1.0.0'
    annotationProcessor(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'appcompat-v7'
        transitive = false
    }
    implementation 'com.blankj:utilcode:1.9.6'
    api 'com.alibaba:arouter-api:1.5.0'
    //RxLifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    implementation 'com.ethanhua:skeleton:1.1.2'
    //logger
    implementation 'com.orhanobut:logger:2.2.0'

    //logging-interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    //Cookie拦截
    implementation 'com.facebook.fresco:fresco:0.13.0'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.cocosw:bottomsheet:1.3.0@aar'
    implementation 'me.yokeyword:fragmentation-core:1.3.7'
    implementation 'me.yokeyword:fragmentation-swipeback:1.3.7'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0'
    implementation 'pub.devrel:easypermissions:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.0.0'
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    annotationProcessor(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'

    }
    implementation 'me.yokeyword:fragmentation:1.3.7'

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'
    implementation 'com.yarolegovich:sliding-root-nav:1.1.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.3.2'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'
    implementation 'com.ramotion.foldingcell:folding-cell:1.2.1'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation 'com.mikepenz:aboutlibraries:6.1.1@aar'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
    implementation 'com.orhanobut:logger:2.1.1'
    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
    //debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    // test
    testApi rootProject.ext.dependencies["junit"]
    testApi rootProject.ext.dependencies["runner"]
    testApi rootProject.ext.dependencies["espresso-core"]
    implementation files('libs/BaiduLBS_Android.jar')
    compile project(':library')
    annotationProcessor(rootProject.ext.dependencies["okhttp3"]) {
        exclude module: "okhttp-urlconnection"
    }
    annotationProcessor(rootProject.ext.dependencies["okhttp-urlconnection"]) {

    }
    // implementation(files('libs/nineoldandroids-2.4.0.jar'))
    implementation files('libs/okhttputils-2_3_7.jar')
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'

    implementation 'com.zftlive.android.library:feature-android-imageloader:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'de.hdodenhof:circleimageview:2.1.0'
//    implementation ('com.github.xuexiangjys:XUI:1.0.4') {
//        exclude module: 'com.nineoldandroids:library:2.4.0'
//    }
    //implementation 'com.github.bumptech.glide:glide:4.8.0'
    // implementation 'com.android.support:design:27.1.1'
    // implementation 'com.android.support:recyclerview-v7:27.1.1'
    // 基础库（不包任何第三方框架）
    implementation project(':base')
    // 自定义 View
    implementation project(':widget')
    // Dialog 封装
    implementation project(':dialog')
    // Glide 隔离
    implementation project(':image')
    // 友盟隔离
    implementation project(':umeng')
    // EventBus 事件总线
    implementation "org.greenrobot:eventbus:3.1.1"
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
    // 状态栏沉浸：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3'
    // 标题栏：https://github.com/getActivity/TitleBar
    implementation 'com.hjq:titlebar:5.0'
    // 吐司工具类：https://github.com/getActivity/ToastUtils
    implementation 'com.hjq:toast:6.0'
    compile project(path: ':filter')
    compile project(path: ':swipemenulib')
    compile project(path: ':LwbTool')
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖


}
repositories {
    mavenCentral()
}
